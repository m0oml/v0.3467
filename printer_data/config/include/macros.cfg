#####################################################################
#   print_start macro
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Nevermore - if you have one

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer and sets absolute positioning
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  # Limit Bed Temp to 90
  {% if params.BED|int > 90 %}
    {% set target_bed = 90|int %}
  {% endif %}
  
  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 85 %}
    M106 S255                                         # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                    # Turns on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Goes to center of the bed
    M190 S{target_bed}                                # Sets target temp for the bed
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
    G4 P300000
    
  # If the bed temp is not over 90c then it skips the heatsoak and just heats up to set temp with a 5min soak.
  {% else %}
    G1 X{x_wait} Y{y_wait} Z15 F9000                # Goes to center of the bed
    M190 S{target_bed}                              # Sets target temp for the bed
                                        # Waits 5 min for the bedtemp to stabilize
  {% endif %}

  # Heats up the nozzle up to target via slicer
  M107                                              # Turns off the PT-fan
  M109 S{target_extruder}                           # Heats the nozzle to your print temp

  # Create a purge line and starts the print
  #G1 X5 Y4 Z0.4 F10000                                # Go to starting point
  #G1 X115 E20 F1000                                 # Purge line
  G1 X5 Y4 Z0.25 F10000                                # Go to starting point
  G1 X115 E12.5 F1000                                 # Purge line

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 40, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    #SET_FAN_SPEED FAN=Filter SPEED=1

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F1800                 ; retract filament
        
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X0 Y10 F3600  ; park nozzle
    M107                                     ; turn off fan

    G4 P3000
    G1 E9.5 F3600
    G1 E9.5 F3600
    TURN_OFF_HEATERS
    
    BED_MESH_CLEAR
    #UPDATE_DELAYED_GCODE ID=filter_off DURATION=180
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro _FRONT]
description: Moves the toolhead to the front
gcode:
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G1 Z25 
  G90
  G1 X10 Y10 F7800

[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause
    _FRONT

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}